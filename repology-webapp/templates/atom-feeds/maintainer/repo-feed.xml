{%- macro feed_id() -%}
tag:repology.org,2018-04-25:maintainer-repo:{{ maintainer_name }}:{{ repository_name }}
{%- endmacro -%}
<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
	<title>Repology feed for {{ maintainer_name }}</title>
	<icon>{{ ctx.external_url_for_static("repology40x40.v1.png")? }}</icon>
	<link href="{{ ctx.external_url_for_self([])? }}" rel="self" type="application/atom+xml" />
	<link href="{{ ctx.external_url_for(crate::endpoints::Endpoint::MaintainerRepoFeed, [("maintainer_name", maintainer_name), ("repository_name", repository_name)])? }}" rel="alternate" type="text/html" />
	<author><name>Repology</name><uri>{{ ctx.external_url_for(crate::endpoints::Endpoint::Index, [])? }}</uri></author>
	<id>{% call feed_id() %}</id>
{%- for event in events %}
	{%- if loop.first %}
	<updated>{{ event.timestamp }}</updated>
	{%- endif %}
	<entry>
		<id>{% call feed_id() %}:{{ event.id }}</id>
		<updated>{{ event.timestamp }}</updated>
		<link href="{{ ctx.external_url_for(crate::endpoints::Endpoint::ProjectVersions, [("project_name", event.project_name.as_str())])? }}#{{ repository_name }}" />
		{%- if event.event_type == "added" %}
		<title>{{ event.project_name }} is now tracked</title>
		<content>Package for {{ event.project_name }} was added to {{ repository_data.title }} and/or assigned to {{ maintainer_name }}</content>
		<category term="added" label="Package was added" />
		{%- else if event.event_type == "removed" %}
		<title>{{ event.project_name }} is no longer tracked</title>
		<content>Package for {{ event.project_name }} is no longer maintained by {{ maintainer_name }} and/or was removed from {{ repository_data.title }}</content>
		<category term="removed" label="Package was removed" />
		{%- else if event.event_type == "uptodate" %}
		<title>{{ event.project_name }} {{ event.data.get("version").ok_or("version is missing")?.as_str().ok_or("version is not a string")? }} is up to date</title>
		<content>Package {{ event.project_name }} version {{ event.data.get("version").ok_or("version is missing")?.as_str().ok_or("version is not a string")? }} in {{ repository_data.title }} is up to date</content>
		<category term="uptodate" label="Package is up to date" />
		{%- else if event.event_type == "outdated" %}
		<title>{{ event.project_name }} {{ event.data.get("version").ok_or("version is missing")?.as_str().ok_or("version is not a string")? }} is outdated
        {%- if let Some(newest_versions) = event.data.get("newest_versions") %} by
        {%- for version in newest_versions.as_array().ok_or("newest_versions are not an array")? -%}
        {%- if !loop.first %},{% endif %} {{ version.as_str().ok_or("version is not a string")? -}}
        {%- endfor -%}
        {%- endif -%}
		</title>
		<content>Package {{ event.project_name }} version {{ event.data.get("version").ok_or("version is missing")?.as_str().ok_or("version is not a string")? }} in {{ repository_data.title }} is outdated
		{%- if let Some(newest_versions) = event.data.get("newest_versions") %} by
        {%- for version in newest_versions.as_array().ok_or("newest_versions are not an array")? -%}
        {%- if !loop.first %},{% endif %} {{ version.as_str().ok_or("version is not a string")? -}}
        {%- endfor -%}
        {%- endif -%}
		</content>
		<category term="outdated" label="Package is outdated" />
		{%- else if event.event_type == "ignored" %}
		<title>{{ event.project_name }} {{ event.data.get("version").ok_or("version is missing")?.as_str().ok_or("version is not a string")? }} is ignored</title>
		<content>Package {{ event.project_name }} version {{ event.data.get("version").ok_or("version is missing")?.as_str().ok_or("version is not a string")? }} in {{ repository_data.title }} is ignored</content>
		<category term="ignored" label="Package is ignored" />
		{%- endif %}
	</entry>
{%- else %}
	<updated>2000-01-01T00:00:00Z</updated>
{%- endfor %}
</feed>
